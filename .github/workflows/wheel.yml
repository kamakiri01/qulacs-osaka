name: Wheel build

on:
  push:
    branches: dev

jobs:
  wheel-build:
    name: Python wheel build
    strategy:
      matrix:
        python-version: ["3.7.5"]
        os: ["ubuntu-self-hosted", "windows-self-hosted", "macos-self-hosted"]
    runs-on: ${{ matrix.os }}
    env:
      CXX_COMPILER: "g++-8"
      C_COMPILER: "gcc-8"
      PYTHON: ${{ matrix.python-version }}
      COVERAGE: "ON"
      BOOST_ROOT: "C:/boost_1_75_0"
      CIBW_TEST_COMMAND: "python {project}/python/test/test_qulacs.py"
      CIBW_TEST_REQUIRES: "numpy scipy openfermion"
      CIBW_BEFORE_BUILD: "pip install cmake"
      CIBW_BEFORE_BUILD_LINUX:
        "pip install cmake && yum install wget -y && wget -q https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.gz && tar -zxf boost_1_76_0.tar.gz &&
        cd boost_1_76_0 && ./bootstrap.sh && ./b2 headers && cp -r boost /usr/local/include" #install boost and cmake
      # In GitHub Actions virtual environment macos-10.15/20201115.1,
      # linking some functions from libgomp fails since the linker cannot find
      # some library files from gcc-8 installed via Homebrew.
      # The following command fixes this issue by (brew) re-linking files from gcc-8.
      # cf. https://stackoverflow.com/a/55500164
      CIBW_BEFORE_BUILD_MACOS: "brew link --overwrite gcc@8 && pip install cmake && brew upgrade && brew install -f boost && brew link boost"
      CIBW_BUILD: "cp3*-macosx_x86_64 cp3*-manylinux_x86_64 cp3*-win_amd64"
      # See https://github.com/Qulacs-Osaka/qulacs-osaka/issues/106
      CIBW_SKIP: "cp310-manylinux_x86_64"
      CIBW_BUILD_VERBOSITY: "1"
      CIBW_ENVIRONMENT: 'QULACS_OPT_FLAGS="-mtune=haswell -mfpmath=both"'
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: "delocate-listdeps {wheel} && script/fix_wheel_osx.sh {wheel} {dest_dir} && delocate-listdeps {wheel}"
      TWINE_USERNAME: "__token__"
    steps:
      - uses: actions/checkout@v2

      - name: Setup cmake
        uses: lukka/get-cmake@latest

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install Python dependencies
        run: python -m pip install cibuildwheel twine

      - name: Run cibuildwheel
        run: python -m cibuildwheel --output-dir wheels

      - name: Upload wheel data if the Git tag is set
        run: python -m twine upload wheels/*.whl
        if: ${{ contains(github.ref, '/tags/') }}
        env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD_QULACS }}
